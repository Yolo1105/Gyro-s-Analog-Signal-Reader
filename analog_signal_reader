// Read analog signal from the gyro's RATEOUT pin
#include <xc.h> 
// Configuration bits 
#pragma config FOSC = INTIO67   // Oscillator Selection bits

void initADC() {
    // Set the gyro's RATEOUT analog pin to analog mode and input
    ANSELBbits.ANSB3 = 1;   // Set RB2/AN4 to analog mode
    TRISBbits.TRISB3 = 1;   // Set RB3 as an input

    // Initialize ADC for 10-bit operation and select voltage references
    ADCON1bits.AD12B = 0;   // 10-bit ADC operation
    ADCON2 = 0;             // AVdd and AVss are the references
    ADCON3 = 0x1F3F;        // Manual Sample, ADC Clock derived from system clock with 31 Tad
    ADCHSbits.CH0SA = 5;    // Select AN4 for CH0 +ve input (gyro is connected here)
    ADCON1bits.ADON = 1;    // Turn on the ADC
}

unsigned int readADC(unsigned char channel) {
    ADCHSbits.CH0SA = channel; // Select the ADC channel (e.g., AN4 if connected to RB2)
    ADCON1bits.SAMP = 1;       // Start sampling
    while (!ADCON1bits.DONE); // Wait for the conversion to finish
    ADCON1bits.SAMP = 0;       // Stop sampling
    return ADCBUF0;            // Read the ADC result
}

int main() {
    initADC(); // Initialize ADC

    while(1) {
        unsigned int adcValue = readADC(5); // Read ADC value from channel AN5 (connected to RB3)
        // Convert adcValue to a string to send over UART
        sprintf(buffer, "ADC Value: %u\r\n", adcValue);
    }
}
